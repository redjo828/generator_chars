import string


def generate_special_bytes(length):
    count = 0
    while count < length:
        for upper in string.ascii_uppercase:
            for lower in string.ascii_lowercase:
                for num in range(10):
                    yield upper + lower + str(num)
                    count += 1
                    if count >= length:
                        return


def bytes_hex(hex_numb):
    return bytes.fromhex(hex_numb).decode('utf-8')


def count_chars_before_word(word, text):
    count = 0
    for char in text:
        if char == word[0]:
            if text[count: count + len(word)] == word:
                break
        count += 1
    return count


def main():
    length = int(input("Input length of chars: "))
    length_bt = length
    if length:
        gen = generate_special_bytes(length)
    result = ''.join([next(gen) for _ in range(length)])
    result = result[:length]
    fin_result = result
    print("\nResult:", fin_result)
    print("\nLength:", len(fin_result))

    hex = input("\n Enter a hexadecimal string: ")
    hex_re = ''.join([hex[::2][::-1][i] + hex[::-2][i] for i in range(len(hex[::2]))])

    rev_hex_input = bytes_hex(str(hex_re))
    count = count_chars_before_word(rev_hex_input, fin_result)

    print("\n     HEX :  " + hex_re)
    print("   ASCII : ", rev_hex_input, count, '[bite]')

    input("Press Enter to exit...")
    #input("\nНажмите Enter для выхода...")

if __name__ == "__main__":
    main()

# result : Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8...

#Enter a hexadecimal string: 33704132 

    # HEX :  32417033
 #  ASCII :  2Ap3 458 [bite] 
